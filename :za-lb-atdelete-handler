#!/usr/bin/env zsh
# -*- mode: sh; sh-indentation: 2; indent-tabs-mode: nil; sh-basic-offset: 2; -*-
#
# Original work Copyright (c) 2019-2020 Sebastian Gniazdowski
# Modified work Copyright (c) 2020-2021 Nicholas Serrano
# Modified work Copyright (c) 2022 zdharma-continuum and contributors

emulate -RL zsh
setopt extendedglob warncreateglobal typesetsilent noshortloops nullglob

if [[ "$1" = plugin ]] {
    local type="$1" user="$2" plugin="$3" id_as="$4" dir="${5#%}" hook="$6"
    } else {
    local type="$1" url="$2" id_as="$3" dir="${4#%}" hook="$5"
}

#
# lbin'' ice â€“ creation of links
#

if (( ${+ICE[lbin]} )); then
    (( ${+ICE[sbin]} )) && {
        (( !OPTS[opt_-q,--quiet] )) && \
            +zinit-message "{pre}==>{rst} {b}lbin{rst}: {ice}sbin{rst} detected, not doing anything"
        return;
    }
    local -a lbins srcdst
    lbins=( ${(s.;.)ICE2[lbin]} )

    local lbin sym="-P"

    (
        # CD for the globbing through eval
        builtin cd -q "$dir" || return

        for lbin in ( $lbins "" ); do
            [[ ${lbin[1]} = "!" ]] && sym="-s"

            if [[ -z $lbin && ${#lbins} -eq 0 ]] || [[ $lbin = "!" && ${#lbins} -eq 1 ]]; then
                local -a files
                integer i=0
                while [[ ! -f $files[1] && $i -lt 9 ]]; do
                    ((i++))
                    case $i in
                        1)
                            files=( $dir/${id_as:t}(Nnon.) )
                            ;;
                        2)
                            [[ -n $plugin ]] && files=( $dir/$plugin(Nnon.) )
                            ;;
                        3)
                            [[ -n $url ]] && files=( $dir/${url:t}(Nnon.) )
                            ;;
                        4)
                            files=( $dir/*(*Nnon.:t) )
                            ;;
                        5)
                            files=( $dir/**/${id_as:t} )
                            ;;
                        6)
                            [[ -n $plugin ]] && files=( $dir/**/$plugin(Nnon.) )
                            ;;
                        7)
                            [[ -n $url ]] && files=( $dir/**/${url:t}(Nnon.) )
                            ;;
                        8)
                            files=( $dir/**/*(*Nnon.:t) )
                            ;;
                        9)
                            +zinit-message "{pre}linkbin annex: {error}The automatic-empty {ice}lbin{error} ice didn't find any executable files{rst}"
                            ;;
                    esac
                done
                [[ $i -gt 8 ]] && break
                lbin=$files[1]
            else
                lbin=${lbin#!}
                [[ -z $lbin ]] && continue
            fi
            srcdst=( ${(@s.->.)lbin} )
            srcdst=( ${srcdst[@]//((#s)[[:space:]]##|[[:space:]]##(#e))/} )

            # Substitute the standard keywords and params
            @zinit-substitute 'srcdst[1]' 'srcdst[2]'

            local -a fnames
            local fname
            eval "fnames=( ${srcdst[1]}(Nnon.) )"

            if (( !${#fnames} )); then
                +zinit-message "{error}Error:{rst} {b}lbin{rst}: {glob}$lbin{rst} didn't match any files"
                continue
            fi

            for fname in ( $fnames ); do
                srcdst[1]="$fname"

                local fnam="${srcdst[2]:-${srcdst[1]:t}}"
                local file="$ZPFX/bin/$fnam"

                if [[ -f $file ]]; then
                    command rm "$file"
                    if ! [[ -f $file ]]; then
                        (( !OPTS[opt_-q,--quiet] )) && \
                            +zinit-message "{pre}==>{rst} {b}lbin{rst}: Removed {file}$fnam{rst} ${${${sym#-P}:+soft}:-hard} link"
                    else
                        +zinit-message "{error}Error:{rst} {b}lbin{rst}: Something went wrong deleting the {file}$fnam{rst} link"
                    fi
                else
                    +zinit-message "{error}Error:{rst} {b}lbin{rst}: {file}$fnam{rst} ${${${sym#-P}:+soft}:-hard} link didn't exist in \$ZPFX/bin (or isn't a regular file){rst}"
                fi
            done
        done
    )
fi

# vim:ft=zsh:sw=4:sts=4:et
