#!/usr/bin/env zsh
#
# Original work Copyright (c) 2019-2020 Sebastian Gniazdowski
# Modified work Copyright (c) 2020-2021 Nicholas Serrano
# Modified work Copyright (c) 2022 zdharma-continuum and contributors
#

emulate -LR zsh
setopt extendedglob warncreateglobal typesetsilent noshortloops
if [[ "$1" = plugin ]]; then
    local type="$1" user="$2" plugin="$3" id_as="$4" dir="${5#%}" hook="$6"
else
    local type="$1" url="$2" id_as="$3" dir="${4#%}" hook="$5"
fi
if (( ${+ICE[lbin]} )); then
    if (( ${+ICE[sbin]} )); then
        +zi-log "{m} {b}linkbin{rst}: {ice}sbin{rst} ice detected, not doing anything"
        return 0
    fi
    (
        local lbin sym="-P"
        local -a lbins srcdst
        lbins=(${(s.;.)ICE[lbin]})
        builtin cd -q "${dir}" || return
        for lbin in ${lbins} ""; do
            [[ ${lbin[1]} = "!" ]] && sym="-s"
            if [[ -z ${lbin} && ${#lbins} -eq 0 ]] || [[ ${lbin} = "!" && ${#lbins} -eq 1 ]]; then
                integer i=0
                local -aU files=( ./bin/*(x.N) ./**/*(x.OnN) )
                +zi-log "{dbg} [${#files} files] ${(qq@j;, ;)files} |"
                while [[ ! -f ${files[1]} && ${i} -lt 10 ]]; do
                    ((i++))
                    case ${i} in
                        (1) files=(${dir}/${id_as:t}(Nnon.))  ;;
                        (2) [[ -n ${plugin} ]] && files=(${dir}/${plugin}(Nnon.))  ;;
                        (3) [[ -n ${url} ]] && files=(${dir}/${url:t}(Nnon.))  ;;
                        (4) files=(${dir}/*/*(xNnon.:t))  ;;
                        (5) files=(${dir}/**/*(*Nnon.:t))  ;;
                        (6) files=(${dir}/**/${id_as:t}(xNnon.))  ;;
                        (7) [[ -n ${plugin} ]] && files=(${dir}/**/${plugin}(Nnon.))  ;;
                        (8) [[ -n ${url} ]] && files=(${dir}/**/${url:t}(Nnon.))  ;;
                        (9) files=(${dir}/**/*(*Nnon.:t))  ;;
                        (10) +zi-log "{e} {b}linkbin{rst}: {ice}lbin{rst} ice did not detect any executable files" ;;
                    esac
                done
                [[ ${i} -gt 9 ]] && break
                lbin="${files[1]}"
            else
                lbin=${lbin#!}
                [[ -z $lbin ]] && continue
            fi
            +zi-log "{dbg} lbin: ${(qq)lbin}]"
            srcdst=(${(@s.->.)lbin})
            +zi-log "{dbg} srcdst 0: [${#srcdst} | ${(qq@)srcdst}]"
            local bin="${srcdst[1]:t}" name="${id_as:t}"
            if [[ -n ${${bin}//${${${bin}##${name}}%%${name}}/} ]]; then
                srcdst+=("${${bin}//${${${bin}##${name}}%%${name}}/}")
            else
                srcdst+=("${bin}")
            fi
            srcdst=("${(MS)srcdst[@]##[[:graph:]]*[[:graph:]]}")
            +zi-log "{dbg} srcdst 1: [${#srcdst} | ${(qq@)srcdst}]"
            @zinit-substitute "srcdst[1]" "srcdst[2]"
            local -a fnames
            local fname
            if [[ $srcdst[1] != /* ]]; then
                eval "fnames=(**/${srcdst[1]}(Nnon-.))"
            else
                eval "fnames=(${srcdst[1]}(Nnon-.))"
            fi
            if (( !${#fnames} )); then
                +zi-log "{e} {b}linkbin{rst}: {ice}lbin{rst} ice ({glob}$lbin{rst}) did not match any files"
                continue
            fi
            for fname in $fnames; do
                srcdst[1]="${fname}"
                local target_binary="${${(M)srcdst[1]:#/*}:-$dir/${srcdst[1]}}"
                local fnam="${srcdst[2]:-${srcdst[1]:t}}"
                local file="${ZPFX}/bin/${fnam}"
                {
                    command chmod +x "${target_binary}" && \
                    command ln -f "${sym}" "${target_binary}" "${file}" && \
                    rehash
                }
                if [[ -x ${file} ]]; then
                    if [[ -x ${target_binary} ]]; then
                        if (( !OPTS[opt_-q,--quiet] )) && [[ $hook == atclone-<-> || $ZINIT[annex-multi-flag:pull-active] -ge 1 ]]; then
                            +zi-log "{m} {b}linkbin{rst}: ${${${hook:#*atclone-<->}:+Re-c}:-C}reated {file}$fnam{rst} ${${${sym#-P}:+soft}:-hard} link & set +x on the {file}${target_binary:t}{rst} binary"
                        fi
                    else
                        +zi-log "{m} {b}linkbin{rst}: ${${${hook:#*atclone-<->}:+Re-c}:-C}reated {file}$fnam{rst} ${${${sym#-P}:+soft}:-hard} link, but {file}${target_binary:t}{rst} binary does not exist or failed to set +x on it"
                    fi
                else
                    +zi-log "{e} {b}linkbin{rst}: Failed to create {file}$fnam{rst} link"
                fi
            done
        done
    )
fi

# vim: set expandtab filetype=zsh shiftwidth=4 softtabstop=4 tabstop=4:
